openapi: 3.0.1
info:
  title: Stingray Jukebox
  description: Jukebox CRUD API.
  version: 1.0.0
paths:
  /songs:
    get:
      summary: Get songs from Jukebox
      operationId: getSongs
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SongDTO'
  /song/{songId}:
    get:
        summary: Get detailed songs for song ID
        operationId: getDetailedSong
        parameters:
          - name: songId
            in: path
            description: Song ID
            required: true
            schema:
              type: integer
              format: int64
        responses:
          200:
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/DetailedSongDTO'
          404:
            description: Song with given ID cannot be found
  /play/{songId}:
    get:
        summary: Play song for given song ID
        operationId: playSong
        parameters:
          - name: songId
            in: path
            description: Song ID
            required: true
            schema:
              type: integer
              format: int64
        responses:
          200:
            description: succesful operation
            content:
              application/json:
                schema:
                  type: string
          404:
            description: Song with given ID cannot be found
  /playlist:
    post:
      summary: Create a playlist
      operationId: createPlaylist
      requestBody:
        description: Empty playlist to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaylistDTO'
        required: true
      responses:
        200:
          description: Playlist Created
          content:
            application/json:
              schema:
                type: string
      x-codegen-request-body-name: playlist

  /playlist/{playlistId}:
      put:
          summary: Add list of songs to playlist for specified playlistId
          operationId: addSongsToPlaylist
          parameters:
            - name: playlistId
              in: path
              description: Playlist ID
              required: true
              schema:
                type: integer
                format: int64
          requestBody:
            description: List of songs to be added to specified playlist
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/SongDTO'
            required: true
          responses:
            200:
              description: Song(s) added to playlist
              content:
                application/json:
                  schema:
                    type: string
            404:
              description: Playlist with given ID cannot be found
          x-codegen-request-body-name: songs
      delete:
        summary: Remove list of songs from specified playlistId
        operationId: removeSongsToPlaylist
        parameters:
          - name: playlistId
            in: path
            description: Playlist ID
            required: true
            schema:
              type: integer
              format: int64
        requestBody:
          description: List of songs to be removed in specified playlist
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SongDTO'
          required: true
        responses:
          200:
            description: Song(s) removed from playlist
            content:
              application/json:
                schema:
                  type: string
          404:
            description: Playlist with given ID cannot be found
        x-codegen-request-body-name: songs
      get:
          summary: Returns a playlist with the contained songs
          operationId: getPlaylist
          parameters:
            - name: playlistId
              in: path
              description: Playlist ID
              required: true
              schema:
                type: integer
                format: int64
          responses:
            200:
              description: successful operation
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/PlaylistDTO'
            404:
              description: Playlist with given ID cannot be found

  /admin/song:
    post:
        summary: Add a new song
        operationId: addSong
        requestBody:
          description: Song to be added to Jukebox
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedSongDTO'
          required: true
        responses:
          200:
            description: Song added to Jukebox
            content:
              application/json:
                schema:
                  type: string
        x-codegen-request-body-name: detailedSong
    put:
      summary: Modify song
      operationId: modifySong
      requestBody:
        description: Song to be modified in Jukebox
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetailedSongDTO'
        required: true
      responses:
        200:
          description: Song updated in Jukebox
          content:
            application/json:
              schema:
                type: string
        404:
          description: Song with given ID cannot be found
      x-codegen-request-body-name: detailedSong
    delete:
      summary: Remove song from Jukebox
      operationId: removeSong
      requestBody:
        description: Song to be removed from Jukebox
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetailedSongDTO'
        required: true
      responses:
        200:
          description: Song removed from Jukebox
          content:
            application/json:
              schema:
                type: string
        404:
          description: Song with given ID cannot be found
      x-codegen-request-body-name: detailedSong
    get:
      summary: Returns all songs and the number of times played
      operationId: getSongs
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdminSongDTO'

components:
  schemas:
    SongDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          example: Country Road
    DetailedSongDTO:
      allOf:
        - $ref: '#/components/schemas/SongDTO'
        - type: object
        - properties:
            id:
              type: integer
              format: int64
            name:
              type: string
              example: Country Road
            artist:
              type: string
              example: John Denver
            album:
              type: string
              example: Poems, Prayer & Promises
            albumCover:
              type: string
              example: https://img.discogs.com/yUbDGHO_AN70ZeaH0rjYqcc3Amg=/fit-in/600x518/filters:strip_icc():format(jpeg):mode_rgb():quality(90)/discogs-images/R-11682411-1520592281-1110.jpeg.jpg
            label:
              type: string
              example: RCA Records
    PlaylistDTO:
      type: object
      properties:
        name:
          type: string
          example: Stingray Playlist
        songs:
          type: array
          items:
            $ref: '#/components/schemas/SongDTO'
    AdminSongDTO:
      allOf:
        - $ref: '#/components/schemas/DetailedSongDTO'
        - type: object
        - properties:
            timesPlayed:
              type: integer
              format: int64



